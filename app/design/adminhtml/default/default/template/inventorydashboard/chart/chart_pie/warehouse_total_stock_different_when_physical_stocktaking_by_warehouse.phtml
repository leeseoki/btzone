<?php
    $series = array();
    $total_data = array();
    $product_name = array();
    $productIds = array();
    $difference = array();
    $id = $this->getIdBox();
    $requestData = Mage::helper('adminhtml')->prepareFilterString($this->getRequest()->getParam('top_filter'));
    $reportCode = $this->getReportCode();
    if(empty($requestData)){
        $requestData = array();
        $resource = Mage::getSingleton('core/resource');
        $readConnection = $resource->getConnection('core_read');
        $installer = Mage::getModel('core/resource');
        $sql = 'SELECT default_time_range
        FROM '.$installer->getTableName("erp_inventory_dashboard_report_type").'
        WHERE report_code = "'.$reportCode.'"';
        $results = $readConnection->fetchAll($sql);
        $requestData['report_radio_select'] = $reportCode;
        foreach($results as $time){$requestData['select_time'] = $time['default_time_range'];}
        $requestData['warehouse_select'] = "1";
    }
    $name = 'All Warehouses';
    if($requestData['warehouse_select'] > 0){
        $name = Mage::helper('inventoryreports')->getWarehouseName($requestData['warehouse_select']);
    }
    $warehouse_name = Mage::getModel('inventoryplus/warehouse')->load($requestData['warehouse_select'])->getWarehouseName();
    $gettime = Mage::Helper('inventoryreports')->getTimeSelected($requestData);
    $resource = Mage::getSingleton('core/resource');
    $readConnection = $resource->getConnection('core_read');
    $installer = Mage::getModel('core/resource');
    
    if($requestData['warehouse_select']){
        $warehouse_id = $requestData['warehouse_select'];
        $query = 'SELECT DISTINCT p.product_id
                FROM erp_inventory_physicalstocktaking t
                INNER JOIN erp_inventory_physicalstocktaking_product p
                ON t.physicalstocktaking_id = p.physicalstocktaking_id
                WHERE t.status > 0 AND t.warehouse_id = "'.$warehouse_id.'" AND t.created_at BETWEEN "'.$gettime['date_from'].'" AND "'.$gettime['date_to'].'"
                ';
        $results = $readConnection->fetchAll($query);
        foreach($results as $value){
            $productIds[] = $value['product_id'];
        }
        $productIds = Mage::helper('inventoryreports')->checkProductInWarehouse($productIds, $warehouse_id);
        $collection = Mage::getModel('catalog/product')->getCollection()
            ->addAttributeToSelect('*')
            ->addFieldToFilter('entity_id', array('in' => $productIds));
        $tableStockAlias = 'at_stock_qty';
        $tableWarehouseProductAlias = 'at_warehouse_qty';
        if (Mage::helper('catalog')->isModuleEnabled('Mage_CatalogInventory')) {
            $collection->joinField('stock_qty', 'cataloginventory/stock_item', 'qty', 'product_id=entity_id', '{{table}}.stock_id=1', 'left');
        }
        $collection->joinField('warehouse_qty', 'inventoryplus/warehouse_product', 'total_qty', 'product_id=entity_id', '{{table}}.warehouse_id=' . $warehouse_id, 'left');
        $collection->getSelect()->columns(array('difference' => new Zend_Db_Expr("`$tableStockAlias`.`qty` - `$tableWarehouseProductAlias`.`total_qty`")));
        $total_difference = 0;
        foreach($collection as $col){
            if($col->getDifference()){
            }
            $total_data[$col->getEntityId()]['product_name'] = Mage::getModel('catalog/product')->load($col->getEntityId())->getName();
            $total_data[$col->getEntityId()]['difference'] = $col->getDifference();
            }
    }
            foreach ($total_data as $result) {
                $product_name[]   =   $result['product_name'];
                $difference[]     =   $result['difference'];
            }
            $i = 0;
            $categories = '[';
            foreach ($product_name as $name_value) {
                    if ($i != 0) {
                        $categories .= ',';
                    }
                    $categories .= '"' . $name_value . '"';
                    $i++;
                }
            $categories .= ']';    
//            Zend_debug::dump($categories);
            $j=0;
            
            $series['inventory_warehouse']['data'] = '[';    
            foreach($difference as $number_value){
                    if ($j != 0) {
                        $series['inventory_warehouse']['data'] .= ',';
                    }
                    $series['inventory_warehouse']['data'] .= $number_value;
                    $j++;
            }
            $series['inventory_warehouse']['data'] .= ']';
?>
<?php
    $series = '';
    $i = 0;
    foreach ($total_data as $result) {
        if ($i != 0)
            $series .= ',';
        $series .= '[\'' . $result['product_name'] . '(' . (int)$result['difference'] . ' items)\',' . (int)$result['difference'] . ']';
        $i++;
    }
?>
        <!-- report by warehouse pie -->
<div class="chart-parent-div">
        <script type="text/javascript">
            $(function () {
            $_('#<?php echo $id?>').highcharts({
            chart: {
                type: 'pie',
                options3d: {
                    enabled: true,
                    alpha: 50
                }
            },
            title: {
                text: '<?php echo $this->__('Total Qty. Variance by Warehouse: "'.$warehouse_name.'"') ?>',
            },
            plotOptions: {
                pie: {
                    depth: 30
                }
            },
            series: [{
                data: [
                    <?php echo $series;?>
                ]
            }]
            });
            });
        </script>
    <div id="<?php echo $id?>" class="chart-child-div" ></div>
</div>