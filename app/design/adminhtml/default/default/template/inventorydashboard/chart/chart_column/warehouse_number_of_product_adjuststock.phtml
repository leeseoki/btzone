
<?php
$series = array();
$id = $this->getIdBox();
$requestData = Mage::helper('adminhtml')->prepareFilterString($this->getRequest()->getParam('top_filter'));
$reportCode = $this->getReportCode();
if (empty($requestData)) {
    $requestData = array();
    $resource = Mage::getSingleton('core/resource');
    $readConnection = $resource->getConnection('core_read');
    $installer = Mage::getModel('core/resource');
    $sql = 'SELECT default_time_range
        FROM ' . $installer->getTableName("erp_inventory_dashboard_report_type") . '
        WHERE report_code = "' . $reportCode . '"';
    $results = $readConnection->fetchAll($sql);
    $requestData['report_radio_select'] = $reportCode;
    foreach ($results as $time) {
        $requestData['select_time'] = $time['default_time_range'];
    }
    $requestData['warehouse_select'] = "0";
}
$name = 'All Warehouses';
if ($requestData['warehouse_select'] > 0) {
    $name = Mage::helper('inventoryreports')->getWarehouseName($requestData['warehouse_select']);
    $display = 0;
} else {
    $display = 1;
}
$gettime = Mage::Helper('inventoryreports')->getTimeSelected($requestData);
$warehouse_name = array();
$product_number = array();
$resource = Mage::getSingleton('core/resource');
$readConnection = $resource->getConnection('core_read');
$installer = Mage::getModel('core/resource');
if (isset($requestData['warehouse_select']) && $requestData['warehouse_select'] > 0) {
    $warehouse_collection = Mage::getModel('inventoryplus/warehouse')->load($requestData['warehouse_select']);
    $sql = 'SELECT COUNT( DISTINCT p.product_id ) AS product_number, a.warehouse_name
            FROM ' . $installer->getTableName("erp_inventory_adjuststock a") . '
            INNER JOIN ' . $installer->getTableName("erp_inventory_adjuststock_product p") . '
            ON a.adjuststock_id = p.adjuststock_id
            WHERE a.status = 1 AND a.confirmed_at BETWEEN "' . $gettime['date_from'] . '" AND "' . $gettime['date_to'] . '" AND a.warehouse_name = "' . $warehouse_collection->getWarehouseName() . '"
            GROUP BY a.warehouse_name
            ORDER BY product_number';
} else {
    $sql = 'SELECT COUNT( DISTINCT p.product_id ) as product_number, a.warehouse_name
            FROM ' . $installer->getTableName("erp_inventory_adjuststock a") . '
            INNER JOIN ' . $installer->getTableName("erp_inventory_adjuststock_product p") . '
            ON a.adjuststock_id = p.adjuststock_id
            WHERE a.status = 1 AND a.confirmed_at BETWEEN "' . $gettime['date_from'] . '" AND "' . $gettime['date_to'] . '"
            GROUP BY a.warehouse_name
            ORDER BY product_number';
}
$results = $readConnection->fetchAll($sql);
if (isset($requestData['warehouse_select']) && $requestData['warehouse_select'] > 0) {
    $checkResult = 0;
    foreach ($results as $result) {
        if ($checkResult > 10) {
            $limit = 10;
            break;
        }
        if ($result['product_number'] == NULL || $result['product_number'] <= 0) {
            $limit = $checkResult;
            continue;
        }
        $checkResult++;
    }
    if (isset($limit)) {
        $sql .= 'LIMIT ' . $limit . '';
        $results = $readConnection->fetchAll($sql);
    }
}
foreach ($results as $result) {
    $warehouse_name[] = $result['warehouse_name'];
    $product_number[] = $result['product_number'];
}
$i = 0;
$categories = '[';
foreach ($warehouse_name as $name_value) {
    if ($i != 0) {
        $categories .= ',';
    }
    $categories .= '"' . $name_value . '"';
    $i++;
}
$categories .= ']';
//            Zend_debug::dump($categories);
$j = 0;
$series['inventory_warehouse']['data'] = '[';
foreach ($product_number as $number_value) {
    if ($j != 0) {
        $series['inventory_warehouse']['data'] .= ',';
    }
    $series['inventory_warehouse']['data'] .= $number_value;
    $j++;
}
$series['inventory_warehouse']['data'] .= ']';
//            Zend_debug::dump($series);    
?>

<div class="chart-parent-div">
    <script type="text/javascript">
        $(function () {
            $_('#<?php echo $id ?>').highcharts({
            chart: {
            type: 'column',
                    margin: 70,
                    options3d: {
                    enabled: true,
                            alpha: 20,
                            beta: 1,
                            depth: 50
                    }
            },
                    title: {
                    text: '<?php echo $this->__('Number of Products Being Adjusted Qty by Warehouse: "' . $name . '"') ?>'
                    },
                    legend: {
                    enabled:false
                    },
                    plotOptions: {
                    column: {
                    depth: 30
                    }
                    },
                    xAxis: {
                    categories: <?php echo $categories ?>
                    },
                    yAxis: {
                    opposite: true
                    },
                    series: [
<?php $count = 0; ?>
<?php foreach ($series as $serie): ?>
    <?php if (!$count == 0) echo ','; ?>
    <?php $count++; ?>
                        {
                            name: '<?php echo $serie['name']; ?>',
                                    data: <?php echo $serie['data']; ?>
                            }
<?php endforeach; ?>
                        ]
            }
            );
        });
    </script>
    <div class="chart-child-div" id="<?php echo $id ?>"></div>
</div>
