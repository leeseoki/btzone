<?php
    $series = array();
    $id = $this->getIdBox();
    $requestData = Mage::helper('adminhtml')->prepareFilterString($this->getRequest()->getParam('top_filter'));
    $reportCode = $this->getReportCode();
    if(empty($requestData)){
        $requestData = array();
        $resource = Mage::getSingleton('core/resource');
        $readConnection = $resource->getConnection('core_read');
        $installer = Mage::getModel('core/resource');
        $sql = 'SELECT default_time_range
        FROM '.$installer->getTableName("erp_inventory_dashboard_report_type").'
        WHERE report_code = "'.$reportCode.'"';
        $results = $readConnection->fetchAll($sql);
        $requestData['report_radio_select'] = $reportCode;
        foreach($results as $time){$requestData['select_time'] = $time['default_time_range'];}
        $requestData['warehouse_select'] = "0";
    }
    $name = 'All Warehouses';
    if($requestData['warehouse_select'] > 0){
        $name = Mage::helper('inventoryreports')->getWarehouseName($requestData['warehouse_select']);
    }
    $warehouse = $requestData['warehouse_select'];
    $gettime = Mage::Helper('inventoryreports')->getTimeSelected($requestData);
    $datefrom = $gettime['date_from'];
    $dateto = $gettime['date_to'];
    if($warehouse == 0){
        $total_supplyneeds = array();
        $warehouse_collection = Mage::getModel('inventoryplus/warehouse')->getCollection();
        foreach($warehouse_collection as $value){
            $warehouse_id = $value->getWarehouseId();
            $warehouse_product = Mage::getModel('inventoryplus/warehouse_product')
            ->getCollection()
            ->addFieldToFilter('warehouse_id', $warehouse_id);
            $supplyneeds = array();
                foreach($warehouse_product as $value){
                    $product_id = $value->getProductId();
                    $method = Mage::getStoreConfig('inventory/supplyneed/supplyneeds_method');             
                    if ($datefrom && $dateto && $method == 2 && (strtotime($datefrom) <= strtotime($dateto))) {            
                        $max_needs = Mage::helper('inventorysupplyneeds')->calMaxAverage($product_id, $datefrom, $dateto, $warehouse_id);
                    } elseif ($datefrom && $dateto && $method == 1 && strtotime($datefrom) <= strtotime($dateto)) {
                        $max_needs = Mage::helper('inventorysupplyneeds')->calMaxExponential($product_id, $datefrom, $dateto, $warehouse_id);
                    } else {
                        $max_needs = 0;
                    }
                    if($max_needs > 0){
                        $supplyneeds[$product_id] = $max_needs;
                    }
                }
            $total_supplyneeds[$warehouse_id] = $supplyneeds;
            unset($supplyneeds);
        }
        $warehouse_name = array();
        $total_request = array();
        $chart_data = array();
        $count = 0;
        foreach($total_supplyneeds as $key => $values){
//            if(!empty($values)){
                $total_value = 0;
                foreach($values as $value){
                    $total_value += $value;
                }
                if($total_value > 0){
                $warehouse_name[] = Mage::getModel('inventoryplus/warehouse')->load($key)->getWarehouseName();
                $total_request[] = $total_value;
                $chart_data[$count]['warehouse_name'] = Mage::getModel('inventoryplus/warehouse')->load($key)->getWarehouseName();
                $chart_data[$count]['total_request'] = $total_value;
                }
            $count++;
        }
    }
    else{
        $warehouse_product = Mage::getModel('inventoryplus/warehouse_product')
                ->getCollection()
                ->addFieldToFilter('warehouse_id', $warehouse);
        $supplyneeds = array();
        foreach($warehouse_product as $value){
            $product_id = $value->getProductId();
            $method = Mage::getStoreConfig('inventory/supplyneed/supplyneeds_method');             
            if ($datefrom && $dateto && $method == 2 && (strtotime($datefrom) <= strtotime($dateto))) {            
                $max_needs = Mage::helper('inventorysupplyneeds')->calMaxAverage($product_id, $datefrom, $dateto, $warehouse);
            } elseif ($datefrom && $dateto && $method == 1 && strtotime($datefrom) <= strtotime($dateto)) {
                $max_needs = Mage::helper('inventorysupplyneeds')->calMaxExponential($product_id, $datefrom, $dateto, $warehouse);
            } else {
                $max_needs = 0;
            }
            if($max_needs > 0){
                $supplyneeds[$product_id] = $max_needs;
            }
        }
        $warehouse_name = array();
        $total_request = array();
        $count = 0;
        foreach($supplyneeds as $key => $data){
            if($data > 0){
            $warehouse_name[] = Mage::getModel('catalog/product')->load($key)->getName();
            $total_request[] = $data;
            $chart_data[$count]['product_name'] = Mage::getModel('catalog/product')->load($key)->getName();
            $chart_data[$count]['total_request'] = $data;
            $count++;
            }
        }
    }
            $i = 0;
            $categories = '[';
            foreach ($warehouse_name as $name_value) {
                    if ($i != 0) {
                        $categories .= ',';
                    }
                    $categories .= '"' . $name_value . '"';
                    $i++;
                }
            $categories .= ']';    
            $j=0;
            
            $series['inventory_warehouse']['data'] = '[';    
            foreach($total_request as $number_value){
                    if ($j != 0) {
                        $series['inventory_warehouse']['data'] .= ',';
                    }
                    $series['inventory_warehouse']['data'] .= $number_value;
                    $j++;
            }
            $series['inventory_warehouse']['data'] .= ']';
?>
<?php
    $series = '';
    $i = 0;
//                Zend_debug::dump($chart_data);
    foreach ($chart_data as $result) {
        if ($i != 0)
            $series .= ',';
        if($warehouse > 0){
            $series .= '[\'' . $result['product_name'] . '(' . $result['total_request'] . ' items supplyneeds)\',' . $result['total_request'] . ']';
        }else{
            $series .= '[\'' . $result['warehouse_name'] . '(' . $result['total_request'] . ' items supplyneeds)\',' . $result['total_request'] . ']';
        }
                            $i++;
    } 
?>
            <!-- report by warehouse pie -->
<div class="chart-parent-div">
    <script type="text/javascript">
        $(function () {
        $_('#<?php echo $id?>').highcharts({
        chart: {
            type: 'pie',
            options3d: {
                enabled: true,
                alpha: 50
            }
        },
        title: {
            text: '<?php echo $this->__('Total Qty. Needed Purchasing by Warehouse: "'.$name.'"') ?>',
        },
        plotOptions: {
            pie: {
                depth: 30
            }
        },
        series: [{
            data: [
                <?php echo $series;?>
            ]
        }]
        });
        });
    </script>
    <div id="<?php echo $id?>" class="chart-child-div" ></div>
</div>